{"version":3,"sources":["Detail.js"],"names":["Box","styled","div","Title","h4","props","색상","TabContent","useEffect","스위치변경","누른탭","Info","재고","인덱스","connect","state","redux상품","reducer","alert상태","reducer3","history","useHistory","seq","useParams","찾은상품","shoes","find","item","id","Number","useState","alertShow","alertShow변경","inputData","inputData변경","context재고Data","useContext","재고context","누른탭변경","스위치","최근상품","최근상품변경","타이머","setTimeout","clearTimeout","최근본상품","localStorage","getItem","temp","JSON","parse","idx","findIndex","data","splice","unshift","setItem","stringify","slice","className","onChange","e","target","value","src","width","alt","title","content","price","onClick","재고변경","dispatch","type","payload","name","quan","push","goBack","style","marginTop","map","class","borderStyle","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout"],"mappings":"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","file":"static/js/4.dae501cb.chunk.js","sourcesContent":["import { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\nimport { 재고context } from './App.js';\r\nimport { Nav, Card, ListGroup, ListGroupItem } from 'react-bootstrap';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\n\r\nlet Box = styled.div`\r\n    padding : 20px;\r\n`;\r\nlet Title = styled.h4`\r\n    font-size : 25px;\r\n    color : ${props => props.색상};\r\n`;\r\n\r\nfunction Detail(props) {\r\n    let history = useHistory();\r\n    let { seq } = useParams();\r\n    let 찾은상품 = props.shoes.find(item => item.id === Number(seq));\r\n    let [alertShow, alertShow변경] = useState(true);\r\n    let [inputData, inputData변경] = useState(\"\");\r\n    let context재고Data = useContext(재고context);\r\n    let [누른탭, 누른탭변경] = useState(0);\r\n    let [스위치, 스위치변경] = useState(false);\r\n\r\n    let [최근상품, 최근상품변경] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let 타이머 = setTimeout(() => { alertShow변경(false) }, 2000);\r\n        return () => { clearTimeout(타이머) }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let 최근본상품 = localStorage.getItem(\"최근본상품\");\r\n        \r\n        let temp = 최근본상품 ? JSON.parse(최근본상품) : []; \r\n        \r\n        let idx = temp.findIndex(data => data == seq);\r\n        \r\n        if (idx == -1) {\r\n            temp.unshift(seq);\r\n        } else {\r\n            temp.splice(idx, 1);\r\n            temp.unshift(seq);\r\n        }\r\n        localStorage.setItem('최근본상품', JSON.stringify(temp.slice(0, 3)));\r\n        최근상품변경(temp.slice(0, 3));\r\n    }, [])\r\n\r\n    function 재고변경() {\r\n        let temp = [...props.재고];\r\n        temp[찾은상품.id] = temp[찾은상품.id] > 0 ? temp[찾은상품.id] - 1 : temp[찾은상품.id];\r\n        props.재고변경(temp);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Box>\r\n                <Title 색상={'red'}>Detail</Title>\r\n                <Title 색상={\"blue\"}>Detail</Title>\r\n                <Title className=\"orange\">Detail</Title>\r\n            </Box>\r\n            {inputData}\r\n            <input onChange={e => { inputData변경(e.target.value) }}></input>\r\n            {alertShow ?\r\n                <div className=\"my-alert2\">\r\n                    <p>재고가 얼마 남지 않았습니다.</p>\r\n                </div>\r\n                : null\r\n            }\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <img src={`https://codingapple1.github.io/shop/shoes${찾은상품.id + 1}.jpg`} width=\"100%\" alt=\"\" />\r\n                </div>\r\n                <div className=\"col-md-6 mt-4\">\r\n                    <h4 className=\"pt-5\">{찾은상품?.title}</h4>\r\n                    <p>{찾은상품?.content}</p>\r\n                    <p>{찾은상품?.price}</p>\r\n\r\n                    <Info 재고={context재고Data} 인덱스={찾은상품?.id}></Info>\r\n                    <button className=\"btn btn-danger\" onClick={() => { \r\n                        재고변경();\r\n                        props.dispatch({ type: \"항목추가\", payload : { id: 찾은상품.id, name: 찾은상품.title, quan: props.재고[찾은상품.id] }})\r\n                        history.push('/cart');\r\n                        }}>주문하기</button>\r\n                    <button className=\"btn btn-success\" onClick={() => {\r\n                        history.goBack();\r\n                        // history.push('/');\r\n                    }}>뒤로가기</button>\r\n                </div>\r\n                \r\n                {/* <Card> */}\r\n                <div style={{marginTop: 10}}>\r\n                {최근상품.map(function(data, idx) {\r\n                    return (\r\n                        \r\n                        <img class=\"col-md-4\" style={{ borderStyle: 'dotted' }} src={`https://codingapple1.github.io/shop/shoes${Number(data) + 1}.jpg`} />\r\n                        \r\n                    )\r\n                })\r\n                }\r\n                <p>최근 본상품</p>\r\n                </div>\r\n\r\n                <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"/home\">\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"link-0\" onClick={() => { 스위치변경(false); 누른탭변경(0) }}>Active</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"link-1\" onClick={() => { 스위치변경(false); 누른탭변경(1) }}>Option 2</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n                <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\r\n                    <TabContent 누른탭={누른탭} 스위치변경={스위치변경}></TabContent>\r\n                </CSSTransition>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nfunction TabContent(props) {\r\n    useEffect(()=>{\r\n        props.스위치변경(true);\r\n    })\r\n    if (props.누른탭 === 0) {\r\n        return <div>0번째 내용입니다.</div>\r\n    } else if (props.누른탭 === 1) {\r\n        return <div>1번째 내용입니다.</div>\r\n    }\r\n}\r\n\r\nfunction Info(props) {\r\n    return (\r\n        <p>재고 : {props.재고[props.인덱스]}</p>\r\n    )\r\n}\r\n\r\nfunction state를props화(state) {\r\n    return {\r\n      redux상품: state.reducer,\r\n      alert상태: state.reducer3\r\n    }\r\n  }\r\n  \r\n  export default connect(state를props화)(Detail);"],"sourceRoot":""}