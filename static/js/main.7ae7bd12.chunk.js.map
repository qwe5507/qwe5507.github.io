{"version":3,"sources":["reportWebVitals.js","reducer.js","index.js","data.js","Cart.js","useDidMountEffect.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","기본state","store","createStore","combineReducers","reducer","state","액션","id","상품번호","type","찾은인덱스","findIndex","item","payload","copy","surang","push","찾은idx","splice","reducer3","ReactDOM","render","StrictMode","App","document","getElementById","data","title","content","price","url","quan","Cart","props","useSelector","dispatch","useDispatch","Table","responsive","map","idx","name","onClick","Button","variant","alert상태","className","Parent","Child1","이름","Child2","나이","useEffect","console","log","memo","useDidMountEffect","func","deps","didMount","useRef","current","Detail","lazy","재고context","React","createContext","ShoeItem","history","useHistory","Col","md","src","인덱스","width","alt","신발","Test","재고","useContext","useState","shoes","shoes변경","loadingShow","loadingShow변경","clickCount","clickCount변경","재고변경","count","setCount","age","setAge","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","style","color","exact","path","Provider","value","fallback","Row","axios","get","result","temp","catch","class","role"],"mappings":"0JAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gCCLVQ,EAAU,G,WCSVC,EAAQC,YAAYC,YAAgB,CAACC,QDJlC,WAAuC,IAAtBC,EAAqB,uDAAbL,EAASM,EAAI,uCACvCC,EAAKD,EAAGE,yBAEV,GAAgB,6BAAZF,EAAGG,KAAiB,CACtB,IAAIC,EAAK,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAOM,WAAU,SAAAC,GAAI,OAAIA,EAAKL,KAAOD,EAAGO,QAAQN,MAC5D,GAAIG,GAAS,EAAG,CACd,IAAII,EAAI,YAAOT,GAEf,OADAS,EAAKJ,GAAOK,SACLD,EAEP,IAAIA,EAAI,YAAOT,GAGf,OAFAC,EAAGO,QAAQE,OAAS,EACpBD,EAAKE,KAAKV,EAAGO,SACNC,EAGJ,GAAgB,6BAAZR,EAAGG,KAAiB,CAC7B,IAAIQ,EAAK,OAAGZ,QAAH,IAAGA,OAAH,EAAGA,EAAOM,WAAU,SAAAC,GAAI,OAAIA,EAAKL,KAAOA,KAC7CO,EAAI,YAAOT,GAEf,OADAS,EAAKI,OAAOD,EAAO,GACZH,EAEF,GAAgB,6BAAZR,EAAGG,KAAiB,CAC7B,IAAIQ,EAAK,OAAGZ,QAAH,IAAGA,OAAH,EAAGA,EAAOM,WAAU,SAAAC,GAAI,OAAIA,EAAKL,KAAOA,KAC7CO,EAAI,YAAOT,GAEf,OADAS,EAAKG,GAAOF,QAAU,EACfD,EAEF,GAAe,6BAAZR,EAAGG,KAAiB,CAC5B,IAAIQ,EAAK,OAAGZ,QAAH,IAAGA,OAAH,EAAGA,EAAOM,WAAU,SAAAC,GAAI,OAAIA,EAAKL,KAAOA,KAC7CO,EAAI,YAAOT,GAEf,OADAS,EAAKG,GAAOF,OAASD,EAAKG,GAAOF,OAAS,EAAID,EAAKG,GAAOF,OAASD,EAAKG,GAAOF,OAAS,EACjFD,EAGP,OAAOT,GC/BqCc,SDmC3C,WAAyC,IAAvBd,IAAsB,yDAAJC,EAAI,uCAC3C,MAAgB,mBAAZA,EAAGG,MAGAJ,MCrCXe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUrB,MAAOA,EAAjB,SACE,cAACsB,EAAA,EAAD,UAINC,SAASC,eAAe,SAM1BlC,K,kLCEemC,G,MA7BF,CACT,CACInB,GAAI,EACJoB,MAAO,kBACPC,QAAS,iBACTC,MAAO,KACPC,IAAK,iDACLC,KAAO,IAGX,CACIxB,GAAI,EACJoB,MAAO,WACPC,QAAS,gBACTC,MAAO,KACPC,IAAK,iDACLC,KAAO,IAGX,CACIxB,GAAI,EACJoB,MAAO,cACPC,QAAS,qBACTC,MAAO,KACPC,IAAK,iDACLC,KAAO,M,yCC+BAC,MApDf,SAAcC,GAAQ,IAAD,EAEf5B,EAAQ6B,aAAY,SAAC7B,GAAD,OAAWA,KAC/B8B,EAAWC,cAEf,OACE,gCACE,eAACC,EAAA,EAAD,CAAOC,YAAU,EAAjB,UACE,+BACE,0DACA,oDACA,8CACA,8CACA,sCANJ,UAQGjC,EAAMD,eART,aAQG,EAAemC,KAAI,SAACb,EAAMc,GACzB,OACE,+BACE,6BAAKd,EAAKnB,KACV,6BAAKmB,EAAKe,OACV,oCAAKf,QAAL,IAAKA,OAAL,EAAKA,EAAMX,SACX,+BAAI,wBAAQ2B,QAAS,WAAQP,EAAS,CAAE1B,KAAM,2BAAQD,2BAAMkB,EAAKnB,MAA7D,eACF,wBAAQmC,QAAS,WAAQP,EAAS,CAAE1B,KAAM,2BAAQD,2BAAMkB,EAAKnB,MAA7D,kBACF,6BACE,cAACoC,EAAA,EAAD,CAAQC,QAAQ,gBAAgBF,QAAS,WACvCP,EAAS,CAAE1B,KAAM,2BAAQD,2BAAMkB,EAAKnB,MADtC,mBAPKiC,SAedP,EAAMY,kBACL,sBAAKC,UAAU,YAAf,UACE,0GACA,wBAAQJ,QAAS,WAAQP,EAAS,CAAE1B,KAAM,oBAA1C,6BAEA,KAEJ,cAACsC,EAAD,CAAQ,eAAI,qBAAO,eAAI,SAe7B,SAASA,EAAOd,GACd,OACE,gCACE,cAACe,EAAD,CAAQ,eAAIf,EAAMgB,eAClB,cAACC,EAAD,CAAQ,eAAIjB,EAAMkB,kBAIxB,SAASH,EAAOf,GAEd,OADAmB,qBAAU,WAAQC,QAAQC,IAAI,gCACvB,uCAET,IAAIJ,EAASK,gBAAK,SAAUtB,GAE1B,OADAmB,qBAAU,WAAQC,QAAQC,IAAI,gCACvB,0CCzDME,EATW,SAACC,EAAMC,GAChC,IAAMC,EAAWC,kBAAO,GAExBR,qBAAU,WACLO,EAASE,QAASJ,IACjBE,EAASE,SAAU,IACtBH,ICEAI,EAASC,gBAAK,WAAQ,OAAO,uDAEtBC,EAAYC,IAAMC,gBAoI7B,SAASC,EAASlC,GAChB,IAAImC,EAAUC,cAEd,OACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,qBAAKC,IAAG,mDAA8CvC,EAAMwC,mBAApD,QAA+DC,MAAM,OAAOC,IAAI,GACtFjC,QAAS,WAAQ0B,EAAQpD,KAAR,kBAAwBiB,EAAM2C,aAAGrE,QACpD,+BAAK0B,EAAM2C,aAAGjD,MAAd,MAAwBM,EAAM2C,aAAG/C,SACjC,4BAAII,EAAM2C,aAAGhD,UACb,cAACiD,EAAD,CAAM,qBAAK5C,EAAM2C,aAAGrE,QAK1B,SAASsE,EAAK5C,GACZ,IAAI6C,EAAKC,qBAAWf,GACpB,OACE,gDAASc,EAAG7C,EAAMwC,uBAIPlD,IAvJf,WAEE,MAAuByD,mBAAStD,GAAhC,mBAAKuD,EAAL,KAAYC,EAAZ,KACA,EAAmCF,oBAAS,GAA5C,mBAAKG,EAAL,KAAkBC,EAAlB,KACA,EAAiCJ,mBAAS,GAA1C,mBAAKK,EAAL,KAAiBC,EAAjB,KACA,EAAiBN,mBAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAvD,mBAAKF,EAAL,KAASS,EAAT,KAGA,EAAwBP,mBAAS,GAAjC,mBAAKQ,EAAL,KAAYC,EAAZ,KACA,EAAoBT,mBAAS,IAA7B,mBAAKU,EAAL,KAAUC,EAAV,KAeA,OANAnC,GAAkB,WACD,IAAVgC,GAAeA,EAAQ,GAC1BG,EAAOD,EAAI,KAEZ,CAACF,IAGF,sBAAK1C,UAAU,MAAf,UAEE,cAAC8C,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACE,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,QAAnB,sBACA,cAACL,EAAA,EAAOM,OAAR,CAAe,gBAAc,qBAC7B,cAACN,EAAA,EAAOO,SAAR,CAAiB5F,GAAG,mBAApB,SACE,eAAC6F,EAAA,EAAD,CAAKtD,UAAU,UAAf,UACE,cAACsD,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,IAAvB,kBACA,cAACH,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,UAAvB,oBACA,eAACC,EAAA,EAAD,CAAa7E,MAAM,WAAWpB,GAAG,qBAAjC,UACE,cAACiG,EAAA,EAAYC,KAAb,CAAkBR,KAAK,cAAvB,oBACA,cAACO,EAAA,EAAYC,KAAb,CAAkBR,KAAK,cAAvB,4BACA,cAACO,EAAA,EAAYC,KAAb,CAAkBR,KAAK,cAAvB,uBACA,cAACO,EAAA,EAAYE,QAAb,IACA,cAACF,EAAA,EAAYC,KAAb,CAAkBR,KAAK,cAAvB,yCAOV,sBAAKnD,UAAU,aAAf,UACE,oBAAI6D,MAAO,CAAEC,MAAO,eAApB,4BACA,mBAAGD,MAAO,CAAEC,MAAO,YAAnB,+FAGA,4BACE,cAACjE,EAAA,EAAD,CAAQC,QAAQ,UAAhB,iDAGJ,gCACI,sEACA,+EAAe8C,KACf,wBAAQhD,QAAS,WAEf+C,EAASD,EAAQ,IAFnB,2DAMJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,eAAlB,SACE,cAAC,EAAUC,SAAX,CAAoBC,MAAOlC,EAA3B,SACE,cAAC,WAAD,CAAUmC,SAAW,0EAArB,SACE,cAACnD,EAAD,CAAQmB,MAAOA,EAAO,eAAIH,EAAI,2BAAMS,UAI1C,cAAC,IAAD,CAAOuB,KAAK,QAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,OAAlB,SACE,sFAEF,eAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,UACE,eAACf,EAAA,EAAD,WACE,cAAC,EAAUgB,SAAX,CAAoBC,MAAOlC,EAA3B,SACE,cAACoC,EAAA,EAAD,UAEIjC,EAAM1C,KAAI,SAAUb,EAAMc,GACxB,OACE,cAAC2B,EAAD,CAAU,eAAIzC,EAAM,qBAAKc,EAAM,GAAQA,UAMhD6C,EAAa,EACZ,wBAAQvC,UAAU,kBAAkBJ,QAAS,WAC3C0C,GAAc,GACd+B,IAAMC,IAAN,kDAAqD/B,EAArD,UACG3F,MAAK,SAAC2H,GACLjC,GAAc,GACd,IAAIkC,EAAI,YAAOD,EAAO3F,MACtB4F,EAAK/E,KAAI,SAAAb,GAEP,OADAA,EAAKK,KAAO,GACLL,KAETwD,EAAQ,GAAD,mBAAKD,GAAL,YAAeqC,KACtBhC,EAAaD,EAAa,MAE3BkC,OAAM,WACLnC,GAAc,GACd/B,QAAQC,IAAI,oBAflB,gCAkBE,MAKL6B,EACC,qBAAKqC,MAAM,iBAAiBC,KAAK,SAAjC,SACE,sBAAMD,MAAM,UAAZ,0BAEA,gB","file":"static/js/main.7ae7bd12.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let alert초기값 = true;\r\n\r\nlet 기본state = [\r\n  // { id: 0, name: \"멋진신발\", quan: 2,},\r\n  // { id: 1, name: \"멋진신발2\", quan: 1,},\r\n];\r\n\r\nexport function reducer(state = 기본state, 액션) {\r\n  let id = 액션.상품번호;\r\n\r\n    if (액션.type === \"항목추가\") {\r\n      let 찾은인덱스 = state?.findIndex(item => item.id === 액션.payload.id);\r\n      if (찾은인덱스 >= 0) {\r\n        let copy = [...state];\r\n        copy[찾은인덱스].surang++;\r\n        return copy;\r\n      } else {\r\n        let copy = [...state];\r\n        액션.payload.surang = 1;\r\n        copy.push(액션.payload);\r\n        return copy;\r\n      }\r\n\r\n    } else if (액션.type === \"항목삭제\") {\r\n      let 찾은idx = state?.findIndex(item => item.id === id);\r\n      let copy = [...state];\r\n      copy.splice(찾은idx, 1);\r\n      return copy;\r\n      \r\n    } else if (액션.type === \"수량증가\") {\r\n      let 찾은idx = state?.findIndex(item => item.id === id);\r\n      let copy = [...state];\r\n      copy[찾은idx].surang += 1;\r\n      return copy;\r\n      \r\n    } else if(액션.type === \"수량감소\") {\r\n      let 찾은idx = state?.findIndex(item => item.id === id);\r\n      let copy = [...state];\r\n      copy[찾은idx].surang = copy[찾은idx].surang < 1 ? copy[찾은idx].surang : copy[찾은idx].surang - 1;\r\n      return copy;\r\n\r\n    } else {\r\n      return state;\r\n    }\r\n  }\r\n\r\nexport function reducer3(state = alert초기값, 액션) {\r\n    if (액션.type === \"ui닫기\") {\r\n      return false;\r\n    }\r\n    return state;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\nimport {reducer, reducer3} from './reducer.js';\n\nlet store = createStore(combineReducers({reducer, reducer3}));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const data = [\r\n    {\r\n        id: 0,\r\n        title: \"White and Black\",\r\n        content: \"Born in France\",\r\n        price: 120000,\r\n        url: \"https://codingapple1.github.io/shop/shoes1.jpg\",\r\n        quan : 15,\r\n    },\r\n\r\n    {\r\n        id: 1,\r\n        title: \"Red Knit\",\r\n        content: \"Born in Seoul\",\r\n        price: 110000,\r\n        url: \"https://codingapple1.github.io/shop/shoes2.jpg\",\r\n        quan : 15,\r\n    },\r\n\r\n    {\r\n        id: 2,\r\n        title: \"Grey Yordan\",\r\n        content: \"Born in the States\",\r\n        price: 130000,\r\n        url: \"https://codingapple1.github.io/shop/shoes3.jpg\",\r\n        quan : 15,\r\n    }\r\n]\r\n\r\nexport default data;","import { useEffect, memo } from 'react';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector, } from 'react-redux';\r\n\r\nfunction Cart(props) {\r\n\r\n  let state = useSelector((state) => state);\r\n  let dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <Table responsive>\r\n        <tr>\r\n          <th>상품번호</th>\r\n          <th>상품명</th>\r\n          <th>수량</th>\r\n          <th>내용</th>\r\n          <th>-</th>\r\n        </tr>\r\n        {state.reducer?.map((data, idx) => {\r\n          return (\r\n            <tr key={idx}>\r\n              <td>{data.id}</td>\r\n              <td>{data.name}</td>\r\n              <td>{data?.surang}</td>\r\n              <td><button onClick={() => { dispatch({ type: \"수량증가\", 상품번호: data.id }) }}>+</button>\r\n                <button onClick={() => { dispatch({ type: \"수량감소\", 상품번호: data.id }) }}>-</button></td>\r\n              <td>\r\n                <Button variant=\"danger active\" onClick={() => {\r\n                  dispatch({ type: \"항목삭제\", 상품번호: data.id })\r\n                }}>x</Button>\r\n              </td>\r\n            </tr>\r\n          )\r\n        })}\r\n      </Table>\r\n      {props.alert상태 ?\r\n        <div className=\"my-alert2\">\r\n          <p>지금 구매하시면 신규 할인 20%</p>\r\n          <button onClick={() => { dispatch({ type: \"ui닫기\" }) }}>닫기</button>\r\n        </div>\r\n        : null\r\n      }\r\n      <Parent 이름={'이진강'} 나이={28}></Parent>\r\n    </div>\r\n  )\r\n}\r\n\r\n// function state를props화(state) {\r\n//   return {\r\n//     redux상품: state.reducer,\r\n//     alert상태: state.reducer3\r\n//   }\r\n// }\r\n\r\n// export default connect(state를props화)(Cart);\r\nexport default Cart;\r\n\r\nfunction Parent(props) {\r\n  return (\r\n    <div>\r\n      <Child1 이름={props.이름} />\r\n      <Child2 나이={props.나이} />\r\n    </div>\r\n  )\r\n}\r\nfunction Child1(props) {\r\n  useEffect(() => { console.log('렌더링됨1') });\r\n  return <div>1111</div>\r\n}\r\nlet Child2 = memo(function (props) {\r\n  useEffect(() => { console.log('렌더링됨2') });\r\n  return <div>2222</div>\r\n});","import { useEffect, useRef } from 'react';\r\n\r\n// useRef 로 관리하는 변수는 값이 바뀐다고 해서 컴포넌트가 리렌더링되지 않습니다. \r\n// 리액트 컴포넌트에서의 상태는 상태를 바꾸는 함수를 호출하고 나서 그 다음 렌더링 이후로 업데이트 된 상태를 조회 할 수 있는 반면,\r\n// useRef 로 관리하고 있는 변수는 설정 후 바로 조회 할 수 있습니다.\r\n\r\nconst useDidMountEffect = (func, deps) => {\r\n\tconst didMount = useRef(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (didMount.current) func();\r\n\t\telse didMount.current = true;\r\n\t}, deps);\r\n};\r\n\r\nexport default useDidMountEffect;\r\n","\n// import Button from '@restart/ui/esm/Button';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport React, { useState, useContext, lazy, Suspense } from 'react';\nimport { Navbar, Container, Nav, NavDropdown, Button, Row, Col } from 'react-bootstrap';\nimport './App.css';\nimport data from './data.js';\n\n// import Detail from './Detail.js';\n\nimport axios from 'axios';\nimport Cart from './Cart.js';\nimport useDidMountEffect from './useDidMountEffect.js';\n\nlet Detail = lazy(() => { return import('./Detail.js')});\n\nexport let 재고context = React.createContext();\n\nfunction App() {\n\n  let [shoes, shoes변경] = useState(data);\n  let [loadingShow, loadingShow변경] = useState(false);\n  let [clickCount, clickCount변경] = useState(2);\n  let [재고, 재고변경] = useState([10, 11, 12, 13, 14, 15, 16, 17]);\n\n  //비동기 테스트\n  let [count, setCount] = useState(0);\n  let [age, setAge] = useState(20);\n\n  // useEffect(()=>{\n  //   if ( count != 0 && count < 3 ) {\n  //     setAge(age+1)\n  //   }\n  // }, [count]) \n\n  //첫 랜더링 막는 useEffect\n  useDidMountEffect(() => {\n    if ( count !== 0 && count < 3 ) {\n      setAge(age+1)\n    }\n  }, [count]);\n\n  return (\n    <div className=\"App\">\n\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">Lee-Shop</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/detail\">Detail</Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <div className=\"background\">\n        <h1 style={{ color: 'forestgreen' }}>20% Season Off</h1>\n        <p style={{ color: 'cornsilk' }}>\n          취미로 재밌게 공부하는 프론트\n        </p>\n        <p>\n          <Button variant=\"success\">자세히보기</Button>\n        </p>\n      </div>\n      <div>\n          <h2>비동기테스트</h2>\n          <div>안녕하십니까 전 {age}</div>\n          <button onClick={() => {\n            //state변경 함수는 비동기처리된다. (동기동작보다 맨 마지막에 실행됨)\n            setCount(count + 1);\n\n          }}>누르면한살먹기</button>\n        </div>\n      <Switch>\n        <Route exact path=\"/detail/:seq\">\n          <재고context.Provider value={재고}>\n            <Suspense fallback={ <div>로딩중이에요 ..</div> }>\n              <Detail shoes={shoes} 재고={재고} 재고변경={재고변경}></Detail>\n            </Suspense>\n          </재고context.Provider>\n        </Route>\n        <Route path=\"/cart\">\n          <Cart></Cart>\n        </Route>\n        <Route exact path=\"/:id\">\n          <div>아무거나 적었을때</div>\n        </Route>\n        <Route exact path=\"/\">\n          <Container>\n            <재고context.Provider value={재고}>\n              <Row>\n                {\n                  shoes.map(function (data, idx) {\n                    return (\n                      <ShoeItem 신발={data} 인덱스={idx + 1} key={idx}></ShoeItem>\n                    )\n                  })\n                }\n              </Row>\n            </재고context.Provider>\n            {clickCount < 4 ?\n              <button className=\"btn btn-primary\" onClick={() => {\n                loadingShow변경(true);\n                axios.get(`https://codingapple1.github.io/shop/data${clickCount}.json`)\n                  .then((result) => {\n                    loadingShow변경(false);\n                    let temp = [...result.data];\n                    temp.map(data => {\n                      data.quan = 10;\n                      return data;\n                    })\n                    shoes변경([...shoes, ...temp]);\n                    clickCount변경(clickCount + 1);\n                  })\n                  .catch(() => {\n                    loadingShow변경(false);\n                    console.log(\"실패\");\n                  });\n              }}>더보기</button>\n              : \"\"\n            }\n\n          </Container>\n\n          {loadingShow ?\n            <div class=\"spinner-border\" role=\"status\">\n              <span class=\"sr-only\">Loading...</span>\n            </div>\n            : null\n          }\n        </Route>\n      </Switch>\n\n\n    </div>\n  );\n}\n\nfunction ShoeItem(props) {\n  let history = useHistory();\n\n  return (\n    <Col md={4}>\n      <img src={`https://codingapple1.github.io/shop/shoes${props.인덱스}.jpg`} width=\"100%\" alt=\"\"\n        onClick={() => { history.push(`/detail/${props.신발.id}`) }} />\n      <h4>{props.신발.title} & {props.신발.price}</h4>\n      <p>{props.신발.content}</p>\n      <Test 인덱스={props.신발.id}></Test>\n    </Col>\n  )\n}\n\nfunction Test(props) {\n  let 재고 = useContext(재고context);\n  return (\n    <p>재고 : {재고[props.인덱스]}</p>\n  )\n}\n\nexport default App;\n"],"sourceRoot":""}